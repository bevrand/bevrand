version: "2"
services:

  redis:
    container_name: redis
    image: redis
    ports: #6379
      - 6379:6379

  dockermongo:
    container_name: dockermongo
    image: mongo:3.6
    ports:
       - 27017:27017

  dockergres:
     container_name: dockergres
     build: ./bevrand.dataseeder/db
     ports:
       - 5434:5432
     environment:
       - POSTGRES_PASSWORD=postgres
       - POSTGRES_USER=postgres

  authenticationapi:
    container_name: authenticationapi
    build: ./bevrand.authenticationapi/bevrand.authenticationapi
    ports:
      - 4570:5000
    depends_on:
      - dockergres
    links:
      - dockergres
    environment:
      - ASPNETCORE_ENVIRONMENT="Development"
      - JAEGER_AGENT_HOST=jaeger-agent
      - JAEGER_AGENT_PORT=6831

  randomizerapi:
    container_name: randomizerapi
    build: ./bevrand.randomizerapi
    ports:
       - 4560:5000 # expose ports - HOST:CONTAINER
    depends_on:
       - playlistapi
       - redis
    links:
       - playlistapi
       - redis
    environment:
       - APP_SETTINGS=Production
       - REDIS_URL=redis
       - JAEGER_AGENT_HOST=jaeger-agent
       - JAEGER_AGENT_PORT=6831
   

  playlistapi:
    container_name: playlistapi
    build: ./bevrand.playlistapi
    ports:
       - 4550:5000  # expose ports - HOST:CONTAINER
    depends_on:
       - dockermongo
    links:
       - dockermongo
    environment:
       - APP_SETTINGS=Production
       - MONGO_URL=mongodb://dockermongo:27017
       - JAEGER_AGENT_HOST=jaeger-agent
       - JAEGER_AGENT_PORT=6831

  proxyapi:
    container_name: proxyapi
    build: ./bevrand.proxyapi
    ports:
      - 4540:5000
    depends_on:
      - randomizerapi
      - playlistapi
      - authenticationapi
    environment:
      - NODE_ENV=development
    links:
      - randomizerapi
      - playlistapi
      - authenticationapi

  reactapp:
    container_name: reactapp
    build: ./bevrand.reactapp
    ports:
      - 80:80
    depends_on:
      - randomizerapi
      - playlistapi
      - authenticationapi
      - proxyapi
    environment:
      - NODE_ENV=development
    links:
      - proxyapi

  dataseeder:
    container_name: dataseeder
    build: ./bevrand.dataseeder
    depends_on:
       - dockermongo
       - dockergres
    links:
       - dockermongo
       - dockergres

  testsuite:
    container_name: backend_tests
    build: ./bevrand.testsuite/bevrand.testsuite
    depends_on:
      - randomizerapi
      - playlistapi
      - authenticationapi
      - proxyapi
    links:
      - randomizerapi
      - playlistapi
      - authenticationapi
      - proxyapi
    environment:
      - ASPNETCORE_ENVIRONMENT="Test"
      

  jaeger-collector:
      image: jaegertracing/jaeger-collector
      command: ["--cassandra.keyspace=jaeger_v1_dc1", "--cassandra.servers=cassandra", "--collector.zipkin.http-port=9411"]
      ports:
        - "14269"
        - "14268:14268"
        - "14267"
        - "9411:9411"
      restart: on-failure
      depends_on:
        - cassandra-schema

  jaeger-query:
      image: jaegertracing/jaeger-query
      command: ["--cassandra.keyspace=jaeger_v1_dc1", "--cassandra.servers=cassandra"]
      ports:
        - "16686:16686"
        - "16687"
      restart: on-failure
      depends_on:
        - cassandra-schema

  jaeger-agent:
      image: jaegertracing/jaeger-agent
      command: ["--collector.host-port=jaeger-collector:14267"]
      ports:
        - "5775:5775/udp"
        - "6831:6831/udp"
        - "6832:6832/udp"
        - "5778:5778"
      restart: on-failure
      depends_on:
        - jaeger-collector

  cassandra:
      image: cassandra:3.9

  cassandra-schema:
      image: jaegertracing/jaeger-cassandra-schema
      depends_on:
        - cassandra