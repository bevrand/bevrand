- hosts: do
  remote_user: terraformuser
  gather_facts: False
  become: yes

  tasks:
  - name: Create directory
    file: path=/home/terraformuser/docker state=directory
    register: changes_made

  - name: Create directory for mount
    file: path=/mnt/datavolumedocker state=directory
    register: datavolume

  - name: Upload docker-compose for host
    copy:
      src=../../docker-compose-created.yml
      dest=/home/terraformuser/docker
      mode=0644

  - command: "ls -lha /home/terraformuser/docker"
    register: dir_out

  - debug: msg="{{ dir_out.stdout_lines }}"
  - name: remove possible old versions
    apt:
      name: ['docker', 'docker-engine', 'docker.io']
      state: absent
    when: changes_made.changed

  - name: install dependencies
    apt:
      name: "{{ item }}"
      update_cache: yes
      state: present
    with_items:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg2
      - software-properties-common
      - python-pip
    become: true
    when: changes_made.changed

  - name: install python modules (for older versions of OS)
    pip:
      name: "{{item}}"
      state: present
    with_items:
    - urllib3
    - pyOpenSSL
    - ndg-httpsclient
    - pyasn1
    when: changes_made.changed

  - name: Ubuntu add docker key
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present
    when: changes_made.changed
     
  - name: create repo line
    command: bash -c "echo \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" "
    register: docker_repo_line
    when: changes_made.changed

  - name: add docker repo
    apt_repository:
      repo: "{{ docker_repo_line.stdout }}"
      state: present
    changed_when: False
    when: changes_made.changed

  - name: install docker ce
    apt:
      name: docker-ce
      state: present
    when: changes_made.changed

  - name: Start Docker
    service: name=docker state=restarted

  - name: Installing docker compose
    pip:
      name: docker-compose
      state: present
    when: changes_made.changed

  - name: Mount datavolume
    mount:
      path: /mnt/datavolumedocker
      src: /dev/disk/by-id/scsi-0DO_Volume_datavolumedocker
      opts: discard,defaults,noatime
      fstype: ext4
      state: mounted
    ignore_errors: no

  - command: "docker-compose -f /home/terraformuser/docker/docker-compose-created.yml up -d"
    register: compose_up
    notify:
    - restart sshd

  - debug: msg="{{ compose_up }}"

  handlers:
    - name: restart sshd
      service: name=sshd state=restarted
