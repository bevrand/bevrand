apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: redis
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis
        ports:
        - containerPort: 6379
          name: redis
---
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  ports:
  - port: 6379
  selector:
    app: redis
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: dockergres
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: dockergres
    spec:
      containers:
      - name: dockergres
        image: bevrand/dockergres:latest
        env:
        - name: POSTGRES_PASSWORD
          value: postgres
        - name: POSTGRES_USER
          value: postgres
        ports:
        - containerPort: 5432
          name: redis
---
apiVersion: v1
kind: Service
metadata:
  name: dockergres
spec:
  ports:
  - port: 5432
  selector:
    app: dockergres
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: dockermongo
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: dockermongo
    spec:
      containers:
      - name: dockermongo
        image: mongo:3.6
        ports:
        - containerPort: 27017
          name: dockermongo
---
apiVersion: v1
kind: Service
metadata:
  name: dockermongo
spec:
  ports:
  - name: "27017"
    port: 27017
    targetPort: 27017
  selector:
    app: dockermongo
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: dataseeder
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: dataseeder
    spec:
      containers:
      - name: dataseeder
        image: bevrand/dataseeder:latest
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: randomizerapi
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: randomizerapi
    spec:
      containers:
      - name: randomizerapi
        image: bevrand/randomizerapi:latest
        ports:
        - containerPort: 5000
        env:
        - name: APP_SETTINGS
          value: Production
        - name: REDIS_URL
          value: redis
---
apiVersion: v1
kind: Service
metadata:
  name: randomizerapi
spec:
  ports:
    - port: 5000
  selector:
    app: randomizerapi
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: authenticationapi
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: authenticationapi
    spec:
      containers:
      - name: authenticationapi
        image: bevrand/authenticationapi:latest
        ports:
        - containerPort: 5000
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: '"Development"'
---
apiVersion: v1
kind: Service
metadata:
  name: authenticationapi
spec:
  ports:
    - port: 5000
  selector:
    app: authenticationapi
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: playlistapi
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: playlistapi
    spec:
      containers:
      - name: playlistapi
        image: bevrand/playlistapi:latest
        ports:
        - containerPort: 5000
        env:
        - name: APP_SETTINGS
          value: Production
        - name: JAEGER_HOST
          value: jaeger-agent
        - name: MONGO_URL
          value: mongodb://dockermongo:27017
---
apiVersion: v1
kind: Service
metadata:
  name: playlistapi
spec:
  ports:
  - port: 5000
  selector:
    app: playlistapi
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: proxyapi
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: proxyapi
    spec:
      containers:
      - name: proxyapi
        image: bevrand/proxyapi:latest
        ports:
        - containerPort: 5000
        env:
        - name: NODE_ENV
          value: development
---
apiVersion: v1
kind: Service
metadata:
  name: proxyapi
spec:
  type: LoadBalancer
  ports:
    - port: 5000
  selector:
    app: proxyapi
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: reactapp
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: reactapp
    spec:
      containers:
      - name: reactapp
        image: bevrand/reactapp:latest
        ports:
        - containerPort: 80
        env:
        - name: NODE_ENV
          value: production
        - name: REACT_APP_PROXY_HOSTNAME
          value: http://localhost:5000
---
apiVersion: v1
kind: Service
metadata:
  name: reactapp
spec:
  type: LoadBalancer
  ports:
  - name: "80"
    port: 80
    targetPort: 80
  selector:
    app: reactapp
