version: "2"
services:

  redis:
    container_name: redis
    image: redis
    ports: #6379
      - 6379:6379

  dockermongo:
    container_name: dockermongo
    image: mongo:3.6
    ports:
       - 27017:27017

  dockergres:
     container_name: dockergres
     build: ./bevrand.dataseeder/db
     ports:
       - 5434:5432
     environment:
       - POSTGRES_PASSWORD=postgres
       - POSTGRES_USER=postgres

  authenticationapi:
    container_name: authenticationapi
    build: ./bevrand.authenticationapi/bevrand.authenticationapi
    ports:
      - 4570:5000
    depends_on:
      - dockergres
      - jaeger-agent
      - jaeger-collector
    links:
      - dockergres
    environment:
      - ASPNETCORE_ENVIRONMENT="Development"
      - JAEGER_AGENT_HOST=jaeger-agent
      - JAEGER_AGENT_PORT=6831

  frontendapi:
    container_name: frontend
    build: ./bevrand.frontend
    ports:
    - 80:80
    depends_on:
    - randomizerapi
    - playlistapi
    - authenticationapi
    - proxyapi
    links:
    - proxyapi

  highscoreapi:
    container_name: highscoreapi
    build: ./bevrand.highscoreapi
    environment:
      - GO_ENV=docker
      - GIN_MODE=release
      - JAEGER_AGENT_HOST=jaeger-agent
      - JAEGER_AGENT_PORT=6831
    depends_on:
      - redis
      - jaeger-agent
      - jaeger-collector
    links:
      - redis
    ports:
      - 4580:5000

  randomizerapi:
    container_name: randomizerapi
    build: ./bevrand.randomizerapi
    ports:
       - 4560:5000 # expose ports - HOST:CONTAINER
    depends_on:
       - playlistapi
    links:
       - playlistapi
       - highscoreapi
    environment:
       - APP_SETTINGS=Production
       - JAEGER_AGENT_HOST=jaeger-agent
       - JAEGER_AGENT_PORT=6831
       - HIGHSCORE_API=http://highscoreapi:5000/api/v1/

  playlistapi:
    container_name: playlistapi
    build: ./bevrand.playlistapi
    ports:
       - 4550:5000  # expose ports - HOST:CONTAINER
    depends_on:
       - dockermongo
       - jaeger-agent
    links:
       - dockermongo
    environment:
       - APP_SETTINGS=Production
       - MONGO_URL=mongodb://dockermongo:27017/admin
       - JAEGER_AGENT_HOST=jaeger-agent
       - JAEGER_AGENT_PORT=6831

  proxyapi:
    container_name: proxyapi
    build: ./bevrand.proxyapi
    ports:
      - 4540:5000
    depends_on:
      - randomizerapi
      - playlistapi
      - authenticationapi
      - jaeger-agent
    environment:
      - NODE_ENV=development
      - JAEGER_AGENT_HOST=jaeger-agent
      - JAEGER_AGENT_PORT=6831
    links:
      - randomizerapi
      - playlistapi
      - authenticationapi

  dataseeder:
    container_name: dataseeder
    build: ./bevrand.dataseeder
    depends_on:
       - dockermongo
       - dockergres
    links:
       - dockermongo
       - dockergres
    environment:
       - MONGO_URL=mongodb://dockermongo:27017/admin

    ##################################
    ######### JAEGER ELASTIC #########
    ##################################
  els:
    image: dockerels:latest
    restart: always
    hostname: els
    environment:
    - cluster.name=docker-cluster
    - bootstrap.memory_lock=true
    - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
    - 9200:9200


  kibana:
    image: docker.elastic.co/kibana/kibana:6.0.0
    ports:
    - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://els:9200
    depends_on:
    - els

  jaeger-collector:
    image: jaegertracing/jaeger-collector:latest
    environment:
    - SPAN_STORAGE_TYPE=elasticsearch
    ports:
    - "14267:14267"
    - "14268:14268"
    - "9411:9411"
    depends_on:
    - els
    hostname: jaeger-collector
    restart: unless-stopped
    command: ["--span-storage.type=elasticsearch", "--es.server-urls=http://els:9200"]

  jaeger-agent:
    image: jaegertracing/jaeger-agent:latest
    environment:
    - SPAN_STORAGE_TYPE=elasticsearch
    ports:
    - "5775:5775/udp"
    - "5778:5778"
    - "6831:6831/udp"
    - "6832:6832/udp"
    depends_on:
    - els
    - jaeger-collector
    restart: unless-stopped
    hostname: jaeger-agent
    command: ["--collector.host-port=jaeger-collector:14267"]

  jaeger-query:
    image: jaegertracing/jaeger-query:latest
    ports:
    - 16686:16686
    environment:
    - SPAN_STORAGE_TYPE=elasticsearch
    depends_on:
    - els
    - jaeger-collector
    restart: unless-stopped
    hostname: jaeger-query
    command: ["--span-storage.type=elasticsearch", "--es.server-urls=http://els:9200", "--es.sniffer=false"]
